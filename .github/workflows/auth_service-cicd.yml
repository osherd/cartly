name: Auth Service CI/CD

on:
  push:
    paths:
      - 'backend/auth_service/**'
      - '.github/workflows/auth_service-cicd.yml'
  pull_request:
    paths:
      - 'backend/auth_service/**'
      - '.github/workflows/auth_service-cicd.yml'

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend/auth_service

    services:
      postgres:
        image: postgres:16-alpine
        env:
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpass
          POSTGRES_DB: testdb
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U testuser"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    env:
      PGUSER: testuser
      PGPASSWORD: testpass
      PGDATABASE: testdb
      LOCAL_CONNECTION_STRING: postgres://testuser:testpass@localhost:5432/testdb

    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test

      - name: Build Docker image
        run: docker build -t auth_service:latest .

      # Optional: Push to Docker Hub or GitHub Container Registry
      # - name: Log in to DockerHub
      #   uses: docker/login-action@v2
      #   with:
      #     username: ${{ secrets.DOCKERHUB_USERNAME }}
      #     password: ${{ secrets.DOCKERHUB_TOKEN }}
      #
      # - name: Push Docker image
      #   run: docker tag auth_service:latest yourdockerhubuser/auth_service:latest
      #   run: docker push yourdockerhubuser/auth_service:latest

  # Optional: Deploy job (if you have a remote server)
  # deploy:
  #   runs-on: ubuntu-latest
  #   needs: build-and-test
  #   steps:
  #     - name: Deploy to server
  #       run: |
  #         ssh user@your-server 'cd /path/to/project && docker-compose pull && docker-compose up -d' 